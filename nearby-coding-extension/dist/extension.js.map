{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://nearby-coding-extension/external commonjs \"vscode\"","webpack://nearby-coding-extension/./src/extension.ts","webpack://nearby-coding-extension/webpack/bootstrap","webpack://nearby-coding-extension/webpack/startup"],"sourcesContent":["module.exports = require(\"vscode\");","import * as vscode from 'vscode';\r\n\r\nfunction getNonce() {\r\n  let text = '';\r\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  for (let i = 0; i < 32; i++) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return text;\r\n}\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  message: string;\r\n  avatar: string;\r\n  lastSeen: number;\r\n}\r\n\r\nexport class NearbyCodingViewProvider implements vscode.WebviewViewProvider {\r\n  public static readonly viewType = 'nearbyCoding.plaza';\r\n  \r\n  private _view?: vscode.WebviewView;\r\n  private _context: vscode.ExtensionContext;\r\n  private _userId: string;\r\n  private _postInterval?: any;\r\n  private _getInterval?: any;\r\n  private _disposed = false;\r\n  private _lastSeenUsers = new Map<string, number>(); // „É¶„Éº„Ç∂„ÉºID„Å®ÊúÄÂæå„Å´Ë¶ã„ÅüÊôÇÂàª„ÇíË®òÈå≤\r\n\r\n  constructor(private readonly _extensionContext: vscode.ExtensionContext) {\r\n    this._context = _extensionContext;\r\n    \r\n    // „É¶„Éº„Ç∂„ÉºID„ÇíÂèñÂæó„Åæ„Åü„ÅØÁîüÊàê\r\n    this._userId = this._context.globalState.get('nearbyCoding.userId') || this._generateUserId();\r\n    this._context.globalState.update('nearbyCoding.userId', this._userId);\r\n  }\r\n\r\n  private _generateUserId(): string {\r\n    return 'user-' + Math.random().toString(36).substr(2, 9) + '-' + Date.now().toString(36);\r\n  }\r\n\r\n  public resolveWebviewView(\r\n    webviewView: vscode.WebviewView,\r\n    context: vscode.WebviewViewResolveContext,\r\n    token: vscode.CancellationToken\r\n  ) {\r\n    this._view = webviewView;\r\n\r\n    webviewView.webview.options = {\r\n      enableScripts: true,\r\n      localResourceRoots: [this._extensionContext.extensionUri]\r\n    };\r\n\r\n    webviewView.webview.html = this._getHtmlForWebview(webviewView.webview);\r\n    \r\n    // Ë®≠ÂÆöÂ§âÊõ¥ÊôÇ„ÅÆÂá¶ÁêÜ\r\n    this._context.subscriptions.push(\r\n      vscode.workspace.onDidChangeConfiguration(e => {\r\n        if (e.affectsConfiguration('nearbyCoding')) {\r\n          // Ë®≠ÂÆöÂ§âÊõ¥ÊôÇ„ÅØÂç≥Â∫ß„Å´Webview„ÇíÊõ¥Êñ∞„Åó„Å¶„Åã„Çâ„É´„Éº„Éó„ÇíÂÜçÈñã\r\n          this._updateWebviewWithCurrentConfig();\r\n          this._restartLoops();\r\n        }\r\n      })\r\n    );\r\n\r\n    // „Éì„É•„Éº„ÅåË°®Á§∫„Åï„Çå„Åü„ÇâÂàùÊúüË®≠ÂÆö„ÇíÂèçÊò†„Åó„Å¶„Åã„ÇâÈñãÂßã\r\n    this._updateWebviewWithCurrentConfig();\r\n    this._startLoops();\r\n\r\n    // Webview„ÅåÁ†¥Ê£Ñ„Åï„Çå„ÇãÊôÇ„ÅÆ„ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó\r\n    webviewView.onDidDispose(() => {\r\n      this._stopLoops();\r\n    });\r\n  }\r\n\r\n  private _getHtmlForWebview(webview: vscode.Webview): string {\r\n    const webviewJsUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionContext.extensionUri, 'dist', 'webview.js'));\r\n    const nonce = getNonce();\r\n\r\n    return `<!DOCTYPE html>\r\n<html lang=\"ja\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; script-src 'nonce-${nonce}'; style-src ${webview.cspSource} 'unsafe-inline'; connect-src https:;\">\r\n    <title>Nearby Coding</title>\r\n</head>\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script nonce=\"${nonce}\" src=\"${webviewJsUri}\"></script>\r\n</body>\r\n</html>`;\r\n  }\r\n\r\n  private _getConfiguration() {\r\n    const config = vscode.workspace.getConfiguration('nearbyCoding');\r\n    let serverUrl = config.get<string>('serverUrl', 'https://nearby-coding-server-i3mbz1w0s-fujii-yoshinobus-projects.vercel.app');\r\n    \r\n    // serverUrl „Åå /api/nearby „ÅßÁµÇ„Çè„Å£„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÅØËøΩÂä†\r\n    if (!serverUrl.endsWith('/api/nearby')) {\r\n      serverUrl = serverUrl.replace(/\\/$/, '') + '/api/nearby';\r\n    }\r\n    \r\n    return {\r\n      serverUrl: serverUrl,\r\n      name: config.get<string>('name', 'Anonymous'),\r\n      message: config.get<string>('message', '„Çà„Çç„Åó„ÅèÔºÅ'),\r\n      avatar: config.get<string>('avatar', 'üßë‚Äçüíª')\r\n    };\r\n  }\r\n\r\n  private async _sendPing() {\r\n    if (this._disposed) return;\r\n    \r\n    const config = this._getConfiguration();\r\n    \r\n    try {\r\n      const response = await fetch(config.serverUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          id: this._userId,\r\n          name: config.name,\r\n          message: config.message,\r\n          avatar: config.avatar\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.warn('Nearby Coding: Ping failed', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.warn('Nearby Coding: Ping error', error);\r\n    }\r\n  }\r\n\r\n  private async _fetchUsers() {\r\n    if (this._disposed || !this._view) return;\r\n    \r\n    const config = this._getConfiguration();\r\n    \r\n    try {\r\n      const response = await fetch(config.serverUrl, {\r\n        method: 'GET'\r\n      });\r\n\r\n      if (response.ok) {\r\n        const users: User[] = await response.json();\r\n        \r\n        // Êñ∞Ë¶è„É¶„Éº„Ç∂„Éº„Åæ„Åü„ÅØÂÜçÂèÇÂä†„É¶„Éº„Ç∂„Éº„ÇíÊ§úÁü•\r\n        const newUsers: User[] = [];\r\n        const currentTime = Date.now();\r\n        \r\n        users.forEach(user => {\r\n          if (user.id !== this._userId) {\r\n            const lastSeen = this._lastSeenUsers.get(user.id) || 0;\r\n            // ÂàùÂõûÂèÇÂä†„ÄÅ„Åæ„Åü„ÅØ5ÂàÜ‰ª•‰∏äÁµåÈÅéÂæå„ÅÆÂÜçÂèÇÂä†\r\n            if (!lastSeen || (currentTime - lastSeen) > 300000) {\r\n              newUsers.push(user);\r\n            }\r\n            this._lastSeenUsers.set(user.id, currentTime);\r\n          }\r\n        });\r\n        \r\n        // Webview„Å´„É¶„Éº„Ç∂„ÉºÊÉÖÂ†±„ÇíÈÄÅ‰ø°\r\n        this._view.webview.postMessage({\r\n          command: 'updateUsers',\r\n          users: users,\r\n          newUsers: newUsers,\r\n          selfId: this._userId,\r\n          selfAvatar: config.avatar\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.warn('Nearby Coding: Fetch users error', error);\r\n    }\r\n  }\r\n\r\n  private _startLoops() {\r\n    this._stopLoops();\r\n    \r\n    // ÂàùÂõûping\r\n    this._sendPing();\r\n    \r\n    // 10Áßí„Åî„Å®„Å´POST\r\n    this._postInterval = setInterval(() => {\r\n      this._sendPing();\r\n    }, 10000);\r\n    \r\n    // 6Áßí„Åî„Å®„Å´GET\r\n    this._getInterval = setInterval(() => {\r\n      this._fetchUsers();\r\n    }, 6000);\r\n    \r\n    // ÂàùÂõûfetch\r\n    setTimeout(() => {\r\n      this._fetchUsers();\r\n    }, 1000);\r\n  }\r\n\r\n  private _stopLoops() {\r\n    if (this._postInterval) {\r\n      clearInterval(this._postInterval);\r\n      this._postInterval = undefined;\r\n    }\r\n    if (this._getInterval) {\r\n      clearInterval(this._getInterval);\r\n      this._getInterval = undefined;\r\n    }\r\n  }\r\n\r\n  private _updateWebviewWithCurrentConfig() {\r\n    if (!this._view) return;\r\n    \r\n    const config = this._getConfiguration();\r\n    \r\n    // Âç≥Â∫ß„Å´ÁèæÂú®„ÅÆË®≠ÂÆö„ÅßWebview„ÇíÊõ¥Êñ∞\r\n    this._view.webview.postMessage({\r\n      command: 'updateUsers',\r\n      users: [],\r\n      selfId: this._userId,\r\n      selfAvatar: config.avatar\r\n    });\r\n  }\r\n\r\n  private _restartLoops() {\r\n    this._stopLoops();\r\n    this._startLoops();\r\n  }\r\n\r\n  public dispose() {\r\n    this._disposed = true;\r\n    this._stopLoops();\r\n  }\r\n}\r\n\r\nexport function activate(context: vscode.ExtensionContext) {\r\n  const provider = new NearbyCodingViewProvider(context);\r\n  \r\n  context.subscriptions.push(\r\n    vscode.window.registerWebviewViewProvider(\r\n      NearbyCodingViewProvider.viewType, \r\n      provider,\r\n      { webviewOptions: { retainContextWhenHidden: true } }\r\n    )\r\n  );\r\n}\r\n\r\nexport function deactivate() {\r\n  // „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó„ÅØËá™ÂãïÁöÑ„Å´Ë°å„Çè„Çå„Çã\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(733);\n"],"names":["module","exports","require","NearbyCodingViewProvider","constructor","_extensionContext","_disposed","_lastSeenUsers","Map","this","_context","_userId","globalState","get","_generateUserId","update","Math","random","toString","substr","Date","now","resolveWebviewView","webviewView","context","token","_view","webview","options","enableScripts","localResourceRoots","extensionUri","html","_getHtmlForWebview","subscriptions","push","vscode","workspace","onDidChangeConfiguration","e","affectsConfiguration","_updateWebviewWithCurrentConfig","_restartLoops","_startLoops","onDidDispose","_stopLoops","webviewJsUri","asWebviewUri","Uri","joinPath","nonce","text","i","charAt","floor","possible","getNonce","cspSource","_getConfiguration","config","getConfiguration","serverUrl","endsWith","replace","name","message","avatar","_sendPing","response","fetch","method","headers","body","JSON","stringify","id","ok","console","warn","status","error","_fetchUsers","users","json","newUsers","currentTime","forEach","user","lastSeen","set","postMessage","command","selfId","selfAvatar","_postInterval","setInterval","_getInterval","setTimeout","clearInterval","undefined","dispose","viewType","provider","window","registerWebviewViewProvider","webviewOptions","retainContextWhenHidden","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}